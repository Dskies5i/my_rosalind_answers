
str1 = "CACGTGGAAGGGATACCTAGGTGAAGTTAAGGGCGTAGCGGCCGAATTATTTATCTATCTCTGGTGTTACCCTCTGGTAGTCTAATTCCCTGGATACTTCCGTGATCTCGTAGAGTGTCTACTTTTGAAGAATTCAAATAATACAGTTTTGATCACTTTTCGGACCAGCGGGCCTCGGGTGGAGTTCTTGCAGGACAGTCTCAGCGCATCGCTATGTAATTTGGCCGTCTCTGCCGGTTAAGCGGATGTAAGTGCGGGGATGAAACCTATGACTGTAAGTATGCTCGATTGTGGTGGTCGAGATCGAACCTCGTCTACATTTAGATTCGGAGTCATAGGCTTTTAACAATCTTTCGATCACTATCGATCATGCGTTTCGAAATAGATAACAGTTGCGAAATCTGAACAGATTGATTATAACTTTATGCCCACTCGAGTCGACATTTTCAATCGGCACCGTAGGACCCGGTAGGATCCTGTACCTAACATAGTTCTAGAAGGGAGGACGGACCTCGTAATGGGGATTGAGAAACGGATGGTACAACTGGTGCTGTCGTCATAATCGCACTTCGTTGTACACTCCGAGAGCCCTTCACCGCTCTCTGTGGGCCTCTGAGCGAACCGTTCGAAACATATCCAAGGCTGTAGATTTAATCCTCTTTCGCGATCGACAAATCTTCTCGAAAGATAGGTTACATCACCAATTAAAGCCCGCACTACCCGCACCCCGGACGTAATGACCTGTCTGTCGTTATGCCAAGTAACGTTCCAAAATGAGCGTACGGGATCGAGAACTAGACATGCGGGACGGTTTCCAGTGGCTCTTGTGAAGGATTTGTGGCCATCTTCGGAGTAACCTGGCCGAGCGAGATTATACTCGATTCTACTGGATTTCGCTAACTGCTTATTTCTTAAGTTATAATTTCCGGCCAACCGACGGGAGACAGTCAATATCATCAGCGGTCCCGATGTCAGCGCCG"
str2 = "CGAATCGGAGGCATATAAAGATTCAGATATGGGTGTAGCGGACCCAGTAGTTCAGCATTAATCATTTTACCATGAGGAAGGCTGCCTCGCAGTCCAGTTCAGTGACAATATAGAACAGGTAATTTTCCAAAATAACACACAAATAGCACACGCGACTAGCGCGTAGGGGCGTCCTAGGGTGCCCTACTACGCTCGCGGTACTGGTGCGGGTCCATGATAGACGTTCCGCTCGGCCGAAGAAAGTGAATTGCAGGCTCGTCTCATTGGTGTGGATAAAAGTTTACTCGTGGGGGCCTGTCCGGATAGATTGTCGTCAAGCGTGAAATTAGGGGTTTCCAGTTTTTTCCATTTGTTGGTTTGTGACAGACCCGACATTTTGGTGCAGATTAGAGCTGTAGATCCAAATTAGGTTGATGTTACGTACATCACCGTACGTGCGTACCATATTCTTCCGAACGATCTCACGGGAACCTTTCAGATCTGATTTCTACGTAGTGCTGTTATTCCACATCTCCAAATGGGGTTCGAGATATAGAATTTTAGACCATTGTATAACAGATAATCAAAGTCCTTGCTCATCTACACAATTCTTTAAGCAGTCTAATTACGTAAATGAGTAAACAGTTCGGAGCTGCTTAAATGCTATATAATATCCACGCTTAAACCAACGACTGACGTCCTAGACAGATATCCTACCATACGTGTCAAATGATCAACTGCCTGTTACATTTAGGGAGCCTGCTTTCTGAAGTTACGCCGGCAAACGTTGGAACAGTGGGGAACGAGAGCGACAACTACAAAGGAAGTGTGTTTCCGGGTTCACGTAGTGAATGATTTAACGCCATCATCGAATGTATCCGGCATCGAACGACCGTTTAAGATTAAAAAGAACTTACCAAACTTCCCGCTTCTCAAGCTTGTAGATCCGCCTAGACAACGGGAAGCGGGTACCTCGAACGGCGGAGGTGTCGGCAGAGACG"


def h_d_loop(str1, str2):
    h_distance = 0
    for position in range(len(str1)):
        if str1[position] != str2[position]:
            h_distance += 1
    return h_distance


def h_d_set(str1, str2):
    nucleotide_set1 = set([(x, y) for x, y in enumerate(str1)])
    nucleotide_set2 = set([(x, y) for x, y in enumerate(str2)])
    # print(sorted(nucleotide_set1.difference(nucleotide_set2))) #Helps visualize position of the missmatches
    return len(nucleotide_set1.difference(nucleotide_set2)  )


def h_d_zip(str1, str2):
    # zipped_dna = zip(str1, str2)
    # h_distance = [(n1, n2) for n1, n2 in zipped_dna if n1 != n2]
    # print(len(h_distance))
    return len([(n1, n2) for n1, n2 in zip(str1, str2) if n1 != n2])


print("Hamming distance: ", end='')
print(h_d_loop(str1, str2))

print("Set Hamming distance: ", end='')
print(h_d_set(str1, str2))

print("ZIP Hamming distance: ", end='')
print(h_d_zip(str1, str2))
